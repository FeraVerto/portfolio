[{"/Users/klevakin/masha/It-Incubator/CSS/portfolio/src/App.jsx":"1","/Users/klevakin/masha/It-Incubator/CSS/portfolio/src/index.tsx":"2","/Users/klevakin/masha/It-Incubator/CSS/portfolio/src/component/Header/Menu/Menu.tsx":"3","/Users/klevakin/masha/It-Incubator/CSS/portfolio/src/component/Header/Header.tsx":"4","/Users/klevakin/masha/It-Incubator/CSS/portfolio/src/component/AboutMe/AboutMe.tsx":"5","/Users/klevakin/masha/It-Incubator/CSS/portfolio/src/component/Skills/Skill/Skill.tsx":"6","/Users/klevakin/masha/It-Incubator/CSS/portfolio/src/component/Skills/Skills.tsx":"7","/Users/klevakin/masha/It-Incubator/CSS/portfolio/src/component/Works/Works.tsx":"8","/Users/klevakin/masha/It-Incubator/CSS/portfolio/src/component/Works/Work/Work.tsx":"9","/Users/klevakin/masha/It-Incubator/CSS/portfolio/src/reportWebVitals.ts":"10","/Users/klevakin/masha/It-Incubator/CSS/portfolio/src/component/Experimental/Experimental.jsx":"11","/Users/klevakin/masha/It-Incubator/CSS/portfolio/src/component/Contacts/Contacts.tsx":"12","/Users/klevakin/masha/It-Incubator/CSS/portfolio/src/component/Contacts/socialIcon/sociallcon.tsx":"13"},{"size":1898,"mtime":1619043268822,"results":"14","hashOfConfig":"15"},{"size":610,"mtime":1618937005117,"results":"16","hashOfConfig":"15"},{"size":749,"mtime":1619041076761,"results":"17","hashOfConfig":"15"},{"size":473,"mtime":1619283760954,"results":"18","hashOfConfig":"15"},{"size":2125,"mtime":1619286811422,"results":"19","hashOfConfig":"15"},{"size":656,"mtime":1619033148254,"results":"20","hashOfConfig":"15"},{"size":1737,"mtime":1619108026924,"results":"21","hashOfConfig":"15"},{"size":2113,"mtime":1619108173367,"results":"22","hashOfConfig":"15"},{"size":727,"mtime":1619036270637,"results":"23","hashOfConfig":"15"},{"size":425,"mtime":1608204175728,"results":"24","hashOfConfig":"15"},{"size":397,"mtime":1619028171701,"results":"25","hashOfConfig":"15"},{"size":2403,"mtime":1619285427242,"results":"26","hashOfConfig":"15"},{"size":736,"mtime":1619283791461,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"127wuop",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/klevakin/masha/It-Incubator/CSS/portfolio/src/App.jsx",["60"],"import React from \"react\"\nimport './App.css'\nimport s from \"./AppMyComponent.module.css\"\nimport {Header} from \"./component/Header/Header\";\nimport {AboutMe} from \"./component/AboutMe/AboutMe\";\nimport {Skills} from \"./component/Skills/Skills\";\nimport {Works} from \"./component/Works/Works\";\nimport {Contacts} from \"./component/Contacts/Contacts\";\n\nimport {Exp} from \"./component/Experimental/Experimental\";\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n            <header className={s.app_header}><Header/></header>\n            <main className={s.main_wrapper}>\n                {/*<ReactPageScroller transitionTimingFunction={\"cubic-bezier(0.42,0,1,1)\"}\n                                   animationTimer={1000}\n                                   animationTimerBuffer={200}\n                                   className={s.app_list}\n                                   renderAllPagesOnFirstRender={true}\n                                   >*/}\n\n                <section className={`${s.app} ${s.app_aboutme}`}>\n                    <div className=\"section-wrapper\">\n                        <AboutMe/>\n                    </div>\n                </section>\n                <section className={`${s.app} ${s.app_skills}`}>\n                    <div className=\"section-wrapper\">\n                        <Skills/>\n                    </div>\n                </section>\n                <section className={`${s.app} ${s.app_works}`}>\n                    <div className=\"section-wrapper\">\n                        <Works/>\n                    </div>\n                </section>\n                <section className={`${s.app} ${s.app_contacts}`}>\n                    <div className=\"section-wrapper\">\n                        <Contacts/>\n                    </div>\n                </section>\n\n                {/*</ReactPageScroller>*/}\n            </main>\n        </div>\n    );\n}\n\nexport default App;\n",["61","62"],"/Users/klevakin/masha/It-Incubator/CSS/portfolio/src/index.tsx",[],["63","64"],"/Users/klevakin/masha/It-Incubator/CSS/portfolio/src/component/Header/Menu/Menu.tsx",[],"/Users/klevakin/masha/It-Incubator/CSS/portfolio/src/component/Header/Header.tsx",["65","66","67"],"import React from 'react'\nimport {Menu} from \"./Menu/Menu\";\nimport s from \"./Header.module.css\"\nimport \"./../../App.css\"\nimport github from \"../../image/github.svg\";\nimport telegram from \"../../image/telegram.svg\";\nimport linkedin from \"../../image/linkedin.svg\";\nimport {SocialIcon} from \"../Contacts/socialIcon/sociallcon\";\n\nexport const Header = () => {\n    return (\n        <div className={s.header}>\n            <SocialIcon/>\n            <Menu/>\n        </div>\n    )\n}","/Users/klevakin/masha/It-Incubator/CSS/portfolio/src/component/AboutMe/AboutMe.tsx",["68"],"import React from 'react'\nimport s from './AboutMe.module.css'\nimport photo from './../../image/avatar.jpg'\nimport ReactTypingEffect from 'react-typing-effect'\n\nexport const AboutMe = () => {\n    return (\n        <div className={s.about}>\n            <div className={s.about_block}>\n                <h1 className={s.about_h1}>\n                    <p className={s.p_hi}>I'm</p>\n                    <p className={s.p_name}> Mariya Klevakina</p>\n                    <p className={s.p_hi}>front-end developer.</p>\n                    {/*<ReactTypingEffect\n                            text={[\"Hello.\", \"World!\"]}\n                        />*/}\n\n                    <span className={s.typing_effect}>\n                        <ReactTypingEffect\n                            className={s.react_typing}\n                            text={[\"All I need is code\", \"Code is all I need\"]}\n                            eraseDelay={1000}\n                            eraseSpeed={20}\n                            //@ts-ignore\n                            cursorRenderer={(cursor: any) => <h1>{cursor}</h1>}\n                            displayTextRenderer={(text: any, i: any) => {\n                                return (\n                                    <span>\n                                    {text.split('').map((char: any, i: any) => {\n                                        const key = `${i}`;\n                                        return (\n                                            <span\n                                                key={key}\n                                                style={{height: \"60px\"}}\n                                            >{char}</span>\n                                        );\n                                    })}\n                                </span>\n                                );\n                            }}\n                        />\n                    </span>\n                </h1>\n                <div className={s.about_photo}>\n                    <img src={photo} alt=\"photo\" width={400} height={500}/>\n                </div>\n            </div>\n        </div>\n    )\n}","/Users/klevakin/masha/It-Incubator/CSS/portfolio/src/component/Skills/Skill/Skill.tsx",[],"/Users/klevakin/masha/It-Incubator/CSS/portfolio/src/component/Skills/Skills.tsx",[],"/Users/klevakin/masha/It-Incubator/CSS/portfolio/src/component/Works/Works.tsx",[],"/Users/klevakin/masha/It-Incubator/CSS/portfolio/src/component/Works/Work/Work.tsx",[],"/Users/klevakin/masha/It-Incubator/CSS/portfolio/src/reportWebVitals.ts",[],"/Users/klevakin/masha/It-Incubator/CSS/portfolio/src/component/Experimental/Experimental.jsx",[],"/Users/klevakin/masha/It-Incubator/CSS/portfolio/src/component/Contacts/Contacts.tsx",["69"],"import React from 'react'\nimport s from \"./Contacts.module.css\"\nimport {useFormik} from \"formik\";\nimport {SocialIcon} from \"./socialIcon/sociallcon\";\n\nexport const Contacts = () => {\n\n    const formik = useFormik({\n        initialValues: {\n            name: '',\n            email: '',\n            message: ''\n        },\n        onSubmit: values => {\n            console.log(\"values\", values)\n        },\n    });\n\n    return (\n        <div className={s.contacts}>\n            <h2>Contacts</h2>\n            <div className={s.contacts_container}>\n                <div className={s.contacts_block}>\n                    <h3 className={s.h3}>Get in Touch</h3>\n                    <ul className={s.contact_list}>\n                        <li className={s.contact_item}>\n                            <span>\n                                <a href=\"tel:89920149906\">\n                                    +7-992-014-99-06\n                                </a>\n                            </span>\n                        </li>\n                        <li className={s.contact_item}>\n                            <span>\n                                <a href=\"mailto:klevakina.maria.ekb@gmail.com\">\n                                    klevakina.maria.ekb@gmail.com\n                                </a>\n                            </span>\n                        </li>\n                    </ul>\n\n                </div>\n\n                <form onSubmit={formik.handleSubmit} className={s.contacts_form}>\n\n                    <div className={s.contacts_form_data}>\n                        <input id={\"name\"}\n                               placeholder={\"Your name *\"}\n                               type=\"text\"\n                               {...formik.getFieldProps('name')}\n                        />\n                        <input id={\"email\"}\n                               placeholder={\"Your email *\"}\n                               type=\"text\"\n                               {...formik.getFieldProps('email')}/>\n                    </div>\n\n                    <textarea id={\"message\"}\n                              placeholder={\"Your message\"}\n                              rows={6}\n                              {...formik.getFieldProps('message')}>\n                    </textarea>\n\n                    <button type=\"submit\">Отправить</button>\n                </form>\n            </div>\n        </div>\n    )\n}","/Users/klevakin/masha/It-Incubator/CSS/portfolio/src/component/Contacts/socialIcon/sociallcon.tsx",[],{"ruleId":"70","severity":1,"message":"71","line":10,"column":9,"nodeType":"72","messageId":"73","endLine":10,"endColumn":12},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":5,"column":8,"nodeType":"72","messageId":"73","endLine":5,"endColumn":14},{"ruleId":"78","severity":1,"message":"80","line":6,"column":8,"nodeType":"72","messageId":"73","endLine":6,"endColumn":16},{"ruleId":"78","severity":1,"message":"81","line":7,"column":8,"nodeType":"72","messageId":"73","endLine":7,"endColumn":16},{"ruleId":"82","severity":1,"message":"83","line":45,"column":21,"nodeType":"84","endLine":45,"endColumn":76},{"ruleId":"78","severity":1,"message":"85","line":4,"column":9,"nodeType":"72","messageId":"73","endLine":4,"endColumn":19},"no-unused-vars","'Exp' is defined but never used.","Identifier","unusedVar","no-native-reassign",["86"],"no-negated-in-lhs",["87"],"@typescript-eslint/no-unused-vars","'github' is defined but never used.","'telegram' is defined but never used.","'linkedin' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'SocialIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]